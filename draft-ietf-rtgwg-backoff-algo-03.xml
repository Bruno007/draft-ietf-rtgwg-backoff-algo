<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="no"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-ietf-rtgwg-backoff-algo-03"
     ipr="trust200902">
  <front>
    <title abbrev="SPF back-off algorithm">SPF Back-off algorithm for link state IGPs</title>

    <author fullname="Bruno Decraene" initials="B." surname="Decraene">
      <organization>Orange</organization>

      <address>
        <email>bruno.decraene@orange.com</email>
      </address>
    </author>
        
    <author fullname="Stephane Litkowski" initials="S" surname="Litkowski">
      <organization>Orange Business Service</organization>
      <address>
        <email>stephane.litkowski@orange.com</email>
      </address>
    </author>   

	    <author fullname="Hannes Gredler" initials="H." surname="Gredler">
      <organization>RtBrick Inc</organization>
	  <address>
      <email>hannes@rtbrick.com</email>
      </address>
    </author>

  <author initials='A.' surname="Lindem" fullname='Acee Lindem'>
    <organization>Cisco Systems</organization>
    <address>
      <postal>
        <street>301 Midenhall Way</street>
        <city>Cary</city> <region>NC</region> 
        <country>USA</country>
        <code>27513</code> 
       </postal>
       <email>acee@cisco.com</email>
    </address>
    </author>
        
        <author fullname="Pierre Francois" initials="P." surname="Francois">
    <organization>Cisco Systems</organization>
      <address>
      <email>pifranco@cisco.com</email>
      </address>
    </author>
    
<author fullname="Chris Bowers" initials="C." surname="Bowers">
  <organization>Juniper Networks, Inc.</organization>
  <address>
    <postal><street>1194 N. Mathilda Ave.</street><city>Sunnyvale</city><region>CA</region><code>94089</code><country>US</country></postal>
    <email>cbowers@juniper.net</email>
  </address>
</author>    
        
    <date year="2016" />

    <abstract>
      <t>This document defines a standard algorithm to back-off link-state IGP SPF computations.</t>

      <t>Having one standard algorithm improves interoperability by reducing the probability and/or duration of transient forwarding loops during the IGP convergence when the IGP reacts to multiple proximate IGP events.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>
    </note>
  </front>

  <middle>
    <section anchor="Intro"  title="Introduction">
      <t>Link state IGPs, such as <xref target="ISO10589-Second-Edition">IS-IS</xref> and <xref target="RFC2328">OSPF</xref>, perform distributed route computation on all routers in the area/level. In order to have consistent routing tables across the network, such distributed computation requires that all routers have the same version of the network topology (Link State DataBase (LSDB)) and perform their computation at the same time.</t>
          
     <t>In general, when the network is stable, there is a desire to compute a new SPF as soon as a failure is detected in order to quickly route around the failure. However, when the network is experiencing multiple proximate failures over a short period of time, there is a conflicting desire to limit the frequency of SPF computations. Indeed, this allows a reduction in control plane resources used by IGPs and all protocols/subsystems reacting on the attendant route change, such as LDP, RSVP-TE, BGP, Fast ReRoute computations, FIB updates... This also reduces the churn on routers and in the network and, in particular, reduces the side effects such as micro-loops that ensue during IGP convergence.</t>
         
         <t>To allow for this, IGPs implement an SPF back-off algorithm. However, different implementations have choosen different algorithms. Hence, in a multi-vendor network, it's not possible to ensure that all routers trigger their SPF computation after the same delay. This situation increases the average differential delay between routers completing their SPF computation. It also increases the probability that different routers compute their FIBs based on different LSDB versions. Both factors increase the probability and/or duration of micro-loops.</t>
         
         <t>To allow multi-vendor networks to have all routers delay their SPF computations for the same duration, this document specifies a standard algorithm. Optionally, implementations may offer alternative algorithms.</t>

    </section>
        
        <section anchor="Goals" title="High level goals">
<t>The high level goals of this algorithm are the following:<list style="symbols">

<t>Very fast convergence for a single event (e.g., link failure).</t>
<t>Paced fast convergence for multiple proximate IGP events while IGP stability is considered acceptable.</t>
<t>Delayed convergence when IGP stability is problematic. This will allow the IGP and related processes to conserve resources during the period of instability.</t>
<t>Always try to avoid different SPF_DELAY timers values across different routers in the area/level. Even though not all routers will receive IGP messages at the same time, due to differences both in the distance from the originator of the IGP event and in flooding implementations.</t>
</list></t>

        </section>
        
        <section anchor="Definitions" title="Definitions and parameters">
<t>IGP events: The reception or origination of an IGP LSDB change requiring a new routing table computation. Examples are a topology change, a prefix change, a metric change on a link or prefix... Note that locally triggering a routing table computation is not considered as an IGP event since other IGP routers are unaware of this occurrence.</t>
<t>Routing table computation: Computation of the routing table, by the IGP, using the IGP LSDB. No distinction is made between the type of computation performed. e.g., full SPF, incremental SPF, Partial Route Computation (PRC). The type of computation is a local consideration. This document may interchangeably use the terms routing table computation and SPF computation.</t>
<t>SPF_DELAY: The delay between the first IGP event triggering a new routing table computation and the start of that routing table computation. It can take the following values:<list style="hanging" hangIndent="1">
<t>INITIAL_SPF_DELAY: A very small delay to quickly handle link failure, e.g., 0 milliseconds.</t>
<t>SHORT_SPF_DELAY: A small delay to have a fast convergence in case of a single component failure (node, SRLG..), e.g., 50-100 milliseconds.</t>
<t>LONG_SPF_DELAY: A long delay when the IGP is unstable, e.g., 2 seconds. Note that this allows the IGP network to stabilize.</t>
</list><vspace blankLines="1" /></t>

<t>TIME_TO_LEARN_INTERVAL: This is the maximum duration typically needed to learn all the IGP events related to a single component failure (e.g., router failure, SRLG failure), e.g., 1 second. It's mostly dependent on failure detection time variation between all routers that are adjacent to the failure. Additionally, it may depend on the different IGP implementations across the network, related to origination and flooding of their link state advertisements.</t>

<t>HOLD_DOWN_INTERVAL: The time required with no received IGP events before considering the IGP to be stable again and allowing the SPF_DELAY to be restored to INITIAL_WAIT. e.g., 3 seconds.</t>
        </section>
        

    <section anchor="Principles" title="Principles of SPF delay algorithm">
<t>For this first IGP event, we assume that there has been a single simple change in the network which can be taken into account using a single routing computation (e.g., link failure, prefix (metric) change) and we optimize for very fast convergence, delaying the routing computation by INITIAL_SPF_DELAY. Under this assumption, there is no benefit in delaying the routing computation. In a typical network, this is the most common type of IGP event. Hence, it makes sense to optimize this case.</t>
<t>If subsequent IGP events are received in a short period of time (TIME_TO_LEARN_INTERVAL), we then assume that a single component failed, but that this failure requires the knowledge of multiple IGP events in order for IGP routing to converge. Under this assumption, we want fast convergence since this is a normal network situation. However, there is a benefit in waiting for all IGP events related to this single component failure so that the IGP can compute the post-failure routing table in a single route computation. In this situation, we delay the routing computation by LONG_WAIT.</t>
<t>If IGP events are still received after TIME_TO_LEARN_INTERVAL from the initial IGP event received in QUIET state, then the network is presumably experiencing multiple independent failures. In this case, while waiting for network stability, the computations are delayed for a longer time represented by LONG_SPF_DELAY. This SPF delay is kept until no IGP events are received for HOLDDOWN_INTERVAL.</t>
<t>Note that previous SPF delay algorithms used to count the number of SPF computations. However, as all routers may receive the IGP events at different times, we cannot assume that all routers will perform the same number of SPF computations or that they will schedule them at the same time. For example, assuming that the SPF delay is 50 ms, router R1 may receive 3 IGP events (E1, E2, E3) in those 50 ms and hence will perform a single routing computation. While another router R2 may only receive 2 events (E1, E2) in those 50 ms and hence will schedule another routing computation when receiving E3.
That's why this document uses a time (TIME_TO_LEARN) from the initial event detection/reception as opposed to counting the number of SPF computations to determine when the IGP is unstable.</t> 
        </section>
        
    <section anchor="Algo" title="Specification of the SPF delay state machine">

            <section anchor="States" title="States">
                
                <t>This section describes the state machine. The naming and semantics of each state corresponds directly to the SPF delay used for IGP events received in that state. Three states are defined:</t>
                
                <t>QUIET: This is the initial state, when no IGP events have occured for at least HOLDDOWN_INTERVAL since the previous routing table computation. The state is meant to handle link failures very quickly.</t>
                <t>SHORT_WAIT: State entered when an IGP event has been received in QUIET state and exited when no IGP events have been received for HOLDDOWN_TIMER. This state is meant to handle single component failure requiring multiple IGP events (e.g., node, SRLG).</t>
                <t>LONG_WAIT: State reached after TIME_TO_LEARN_INTERVAL. In other words, state reached after TIME_TO_LEARN_INTERVAL in state SHORT_WAIT. This state is meant to handle multiple independent component failures during periods of IGP instability.</t>
                </section>

            <section anchor="Transitions" title="States Transitions">
                <t>The FSM is initialized to the QUIET_STATE with all three timers deactivated. The following diagram describes briefly the state transitions.</t>
                
<figure anchor="FSM" title="State Machine"><artwork><![CDATA[

             +-------------------+
             |                   |<-------------------+
             |      QUIET        |                    |
             |                   |<---------+         |
             +-------------------+          |         |
                       |                    |         |
                       |                    |         |
                       | 1: IGP event       |         |
                       |                    |         |
                       v                    |         |
             +-------------------+          |         |
       +---->|                   |          |         |
       |     |    SHORT_WAIT     |----->----+         |
       +-----|                   |                    |
   2:        +-------------------+  6: HOLDDOWN_TIMER |
   IGP event           |               expiration     |
                       |                              |
                       |                              |
                       | 3: LEARN_TIMER               |
                       |    expiration                |
                       |                              |
                       v                              |
             +-------------------+                    |
       +---->|                   |                    |
       |     |     LONG_WAIT     |------------>-------+
       +-----|                   |
    4:       +-------------------+  5: HOLDDOWN_TIMER
    IGP event                          expiration
          
                ]]></artwork>
      </figure>
  
                
                
                
                </section>

            <section anchor="Events" title="FSM Events">
                <t>This section describes the events and the actions performed in response.</t>
                <t>Event 1: IGP events, while in QUIET_STATE.</t>
                <t>Actions on event 1:<list style="symbols">
                <t>If SPF_TIMER is not already running, start it with value INITIAL_SPF_DELAY.</t>
                <t>Start LEARN_TIMER with TIME_TO_LEARN_INTERVAL.</t>
                <t>Start HOLDDOWN_TIMER with HOLDDOWN_INTERVAL.</t>
                <t>Transition to SHORT_WAIT state.</t>
                </list><vspace blankLines="1"/></t>
                                
                <t>Event 2: IGP events, while in SHORT_WAIT.</t>
                <t>Actions on event 2:<list style="symbols">
                <t>Reset HOLDDOWN_TIMER to HOLDDOWN_INTERVAL.</t>
                <t>If SPF_TIMER is not already running, start it with value SHORT_SPF_DELAY.</t>
                <t>Remain in current state.</t>
                </list><vspace blankLines="1"/></t>
                
                <t>Event 3: LEARN_TIMER expiration.</t>
                <t>Actions on event 3:<list style="symbols">
                <t>Transition to LONG_WAIT state.</t>
                </list><vspace blankLines="1"/></t>
                
                <t>Event 4: IGP events, while in LONG_WAIT.</t>
                <t>Actions on event 4:<list style="symbols">
                <t>Reset HOLDDOWN_TIMER to HOLDDOWN_INTERVAL.</t>
                <t>If SPF_TIMER is not already running, start it with value LONG_SPF_DELAY.</t>
                <t>Remain in current state.</t>
                </list><vspace blankLines="1"/></t>
                
                <t>Event 5: HOLDDOWN_TIMER expiration, while in LONG_WAIT.</t>
                <t>Actions on event 5:<list style="symbols">
                <t>Transition to QUIET state.</t>               
                </list><vspace blankLines="1"/></t>
                
                <t>Event 6: HOLDDOWN_TIMER expiration, while in SHORT_WAIT.</t>
                <t>Actions on event 6:<list style="symbols">
                <t>Deactivate LEARN_TIMER.</t>
                <t>Transition to QUIET state.</t>               
                </list><vspace blankLines="1"/></t>

                
                </section>

        </section>
        
            <section anchor="Parameters" title="Parameters">

<t>All the parameters MUST be configurable. All the delays (INITIAL_SPF_DELAY, SHORT_SPF_DELAY, LONG_SPF_DELAY, TIME_TO_LEARN_INTERVAL, HOLD_DOWN_INTERVAL) SHOULD be configurable at the millisecond granularity. They MUST be configurable at least at the tenth of second granularity. The configurable range for all the parameters SHOULD at least be from 0 milliseconds to 60 seconds.</t>

<t>This document does not propose default values for the parameters because these values are expected to be context dependent. Implementations are free to propose their own default values.</t>
<t>When setting (default) values, one SHOULD consider the customers and their application requirements, the computational power of the routers, the size of the network, and, in particular, the number of IP prefixes advertised in the IGP, the frequency and number of IGP events, the number of protocols reactions/computations triggered by IGP SPF (e.g., BGP, PCEP, Traffic Engineering CSPF, Fast ReRoute computations).</t>
<t> Note that some or all of these factors may change over the life of the network. In case of doubt, it's RECOMMENDED to play it safe and start with safe, i.e., longer timers.</t>
<t>For the standard algorithm to be effective in mitigating micro-loops, it is RECOMMENDED that all routers in the IGP domain, or at least all the routers in the same area/level, have exactly the same configured values.</t>
        </section>
        
        
        <section anchor="Impact" title="Impact on micro-loops">
   <t>Micro-loops during IGP convergence are due to a non-synchronized or non-ordered update of the forwarding information tables (FIB) <xref
      target="RFC5715"></xref> <xref target="RFC6976"></xref> <xref target="I-D.ietf-rtgwg-spf-uloop-pb-statement"></xref>. FIBs are installed after multiple steps such as SPF wait time, SPF computation, FIB distribution, and FIB update. This document only addresses the first contribution. This standardized procedure reduces the probability and/or duration of micro-loops when IGPs experience multiple proximate events. It does not prevent all micro-loops. However, it is beneficial and is less complex and costly to implement when compared to full solutions such as <xref target="RFC5715"></xref> or <xref target="RFC6976"></xref>.</t>

        </section>
        
    <section anchor="IANA" title="IANA Considerations">
      <t>No IANA actions required.</t>
    </section>

        <section anchor="Security" title="Security considerations">
      <t>The algorithm presented in this document does not compromise IGP security. An attacker having the ability to generate IGP events would be able to delay the IGP convergence time.
          The LONG_SPF_DELAY state may help mitigate the effects of Denial-of-Service (DOS) attacks generating many IGP events.</t>
    </section>

        <section anchor="acknowledgements" title="Acknowledgements">
      <t>We would like to acknowledge Les Ginsberg, Uma Chunduri, and Mike Shand for the discussions and comments related to this document.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
          
          <?rfc include="reference.RFC.2119"?>

    </references>
  <references title="Informative References">
          <?rfc include="reference.RFC.2328"?>
      <?rfc include="reference.RFC.5715"?>
          <?rfc include="reference.RFC.6976"?>
          <?rfc include="reference.I-D.ietf-rtgwg-spf-uloop-pb-statement"?>
          <reference anchor="ISO10589-Second-Edition"><front><title>Intermediate system to Intermediate system intra-domain
          routeing information exchange protocol for use in conjunction with
          the protocol for providing the connectionless-mode Network Service
          (ISO 8473)</title><author><organization abbrev="ISO">International Organization for
            Standardization</organization></author><date month="Nov" year="2002"/></front><seriesInfo name="ISO/IEC" value="10589:2002, Second Edition"/>
        </reference>
        </references>
  </back>
</rfc>
